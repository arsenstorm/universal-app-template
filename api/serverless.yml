service: Socrasica

provider:
  name: aws
  runtime: 'python3.10'
  stage: prod
  region: eu-west-2
  environment:
    DEPLOYED_ON_AWS: true
    DB_HOST: ${env:AWS_DATABASE_HOST}
    DB_NAME: ${env:AWS_DATABASE_NAME}
    DB_USER: ${env:AWS_DATABASE_USER}
    DB_PASS: ${env:AWS_DATABASE_PASS}
    DB_PORT: ${env:AWS_DATABASE_PORT}
    DEFAULT_EMAIL: ${env:DEFAULT_EMAIL}
    CLIENT_SECRET: ${env:CLIENT_SECRET}
    CLIENT_ID: ${env:CLIENT_ID}
    REFRESH_TOKEN: ${env:REFRESH_TOKEN}
    STRIPE_SECRET_KEY: ${env:STRIPE_SECRET_KEY}
    STRIPE_PUBLISHABLE_KEY: ${env:STRIPE_PUBLISHABLE_KEY}
    API_BASE_URL: ${env:API_BASE_URL}
    APP_BASE_URL: ${env:APP_BASE_URL}
    LANDING_BASE_URL: ${env:LANDING_BASE_URL}
    PAY_BASE_URL: ${env:PAY_BASE_URL}
    STRIPE_SIGNING_SECRET: ${env:STRIPE_SIGNING_SECRET}

  timeout: 30

functions:
  api:
    handler: wsgi_handler.handler
    events:
      - http: ANY /
      - http: 'ANY /{proxy+}'

plugins:
  - serverless-python-requirements
  - serverless-wsgi
  - serverless-domain-manager

custom:
  pythonRequirements:
    dockerizePip: true
    slim: true
  wsgi:
    app: app.app
    packRequirements: false
  customDomain:
    domainName: api.socrasica.com
    basePath: ''
    stage: ${self:provider.stage}
    createRoute53Record: false
    certificateName: '*.socrasica.com'
    endpointType: 'regional'
